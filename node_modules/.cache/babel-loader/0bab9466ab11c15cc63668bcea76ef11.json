{"ast":null,"code":"var _jsxFileName = \"/Users/saifulislam/Desktop/5th-Semester/Frontend Project/Todo-App/src/components/navbar/TodoApp.js\";\nimport React, { Component } from 'react';\nimport Header from '../header';\nimport TodoList from '../todo-list';\nimport TodoAdd from '../todo-add';\nimport TodoSearch from '../todo-search';\nimport TodoFilters from '../todo-filters';\nimport './TodoApp.css';\nexport class TodoApp extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      items: [],\n      search: '',\n      filter: 'all'\n    };\n    this.idCounter = 100;\n\n    this.createItem = label => {\n      return {\n        id: ++this.idCounter,\n        label,\n        complete: false\n      };\n    };\n\n    this.handleItemAdd = label => {\n      this.setState(prevState => {\n        const newItem = this.createItem(label);\n        const items = [...prevState.items, newItem];\n        return {\n          items\n        };\n      });\n    };\n\n    this.handleItemDelete = id => {\n      this.setState(prevState => {\n        const itemIndex = prevState.items.findIndex(item => item.id === id);\n        const items = [...prevState.items.slice(0, itemIndex), ...prevState.items.slice(itemIndex + 1)];\n        return {\n          items\n        };\n      });\n    };\n\n    this.handleToggleComplete = id => {\n      this.setState(prevState => {\n        const itemIndex = prevState.items.findIndex(item => item.id === id);\n        const oldItem = prevState.items[itemIndex];\n        const newValue = !oldItem.complete;\n        const changedItem = { ...oldItem,\n          complete: newValue\n        };\n        const items = [...prevState.items.slice(0, itemIndex), changedItem, ...prevState.items.slice(itemIndex + 1)];\n        return {\n          items\n        };\n      });\n    };\n\n    this.handleSearchChange = search => {\n      this.setState({\n        search\n      });\n    };\n\n    this.handleFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.searchItems = (items, search) => {\n      return items.filter(_ref => {\n        let {\n          label\n        } = _ref;\n        return label.toLowerCase().includes(search.toLowerCase());\n      });\n    };\n\n    this.filterItems = (items, filter) => {\n      switch (filter) {\n        case 'all':\n          return items;\n\n        case 'complete':\n          return items.filter(_ref2 => {\n            let {\n              complete\n            } = _ref2;\n            return complete;\n          });\n\n        case 'active':\n          return items.filter(_ref3 => {\n            let {\n              complete\n            } = _ref3;\n            return !complete;\n          });\n\n        default:\n          return items;\n      }\n    };\n  }\n\n  render() {\n    const {\n      items,\n      search,\n      filter\n    } = this.state;\n    const completeItemsCount = items.filter(_ref4 => {\n      let {\n        complete\n      } = _ref4;\n      return complete;\n    }).length;\n    const activeItemsCount = items.length - completeItemsCount;\n    const visibleItems = this.searchItems(this.filterItems(items, filter), search);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"todoapp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      complete: completeItemsCount,\n      active: activeItemsCount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TodoSearch, {\n      onSearchChange: this.handleSearchChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TodoFilters, {\n      onFilterChange: this.handleFilterChange,\n      filter: filter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TodoAdd, {\n      onItemAdd: this.handleItemAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(TodoList, {\n      items: visibleItems,\n      onItemDelete: this.handleItemDelete,\n      onToggleComplete: this.handleToggleComplete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/saifulislam/Desktop/5th-Semester/Frontend Project/Todo-App/src/components/navbar/TodoApp.js"],"names":["React","Component","Header","TodoList","TodoAdd","TodoSearch","TodoFilters","TodoApp","state","items","search","filter","idCounter","createItem","label","id","complete","handleItemAdd","setState","prevState","newItem","handleItemDelete","itemIndex","findIndex","item","slice","handleToggleComplete","oldItem","newValue","changedItem","handleSearchChange","handleFilterChange","searchItems","toLowerCase","includes","filterItems","render","completeItemsCount","length","activeItemsCount","visibleItems"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Header from '../header';\nimport TodoList from '../todo-list';\nimport TodoAdd from '../todo-add';\nimport TodoSearch from '../todo-search';\nimport TodoFilters from '../todo-filters';\n\nimport './TodoApp.css';\n\nexport class TodoApp extends Component {\n  state = {\n    items: [],\n    search: '',\n    filter: 'all',\n    \n  };\n\n  idCounter = 100;\n\n  createItem = label => {\n    return {\n      id: ++this.idCounter,\n      label,\n      complete: false,\n    };\n  };\n\n  handleItemAdd = label => {\n    this.setState(prevState => {\n      const newItem = this.createItem(label);\n      const items = [...prevState.items, newItem];\n      return { items };\n    });\n  };\n\n  \n  handleItemDelete = id => {\n    this.setState(prevState => {\n      const itemIndex = prevState.items.findIndex(\n        item => item.id === id,\n      );\n      const items = [\n        ...prevState.items.slice(0, itemIndex),\n        ...prevState.items.slice(itemIndex + 1),\n      ];\n      return { items };\n    });\n  };\n\n  handleToggleComplete = id => {\n    this.setState(prevState => {\n      const itemIndex = prevState.items.findIndex(\n        item => item.id === id,\n      );\n      const oldItem = prevState.items[itemIndex];\n      const newValue = !oldItem.complete;\n      const changedItem = { ...oldItem, complete: newValue };\n      const items = [\n        ...prevState.items.slice(0, itemIndex),\n        changedItem,\n        ...prevState.items.slice(itemIndex + 1),\n      ];\n      return { items };\n    });\n  };\n\n  handleSearchChange = search => {\n    this.setState({ search });\n  };\n\n  handleFilterChange = filter => {\n    this.setState({ filter });\n  };\n\n  searchItems = (items, search) => {\n    return items.filter(({ label }) =>\n      label.toLowerCase().includes(search.toLowerCase()),\n    );\n  };\n\n  filterItems = (items, filter) => {\n    switch (filter) {\n      case 'all':\n        return items;\n      case 'complete':\n        return items.filter(({ complete }) => complete);\n      case 'active':\n        return items.filter(({ complete }) => !complete);\n      default:\n        return items;\n    }\n  };\n\n  render() {\n    \n    \n    const { items, search, filter } = this.state;\n    const completeItemsCount = items.filter(({ complete }) => complete).length;\n    const activeItemsCount = items.length - completeItemsCount;\n    const visibleItems = this.searchItems(\n      this.filterItems(items, filter),search,\n    );\n    return (\n      <div className=\"todoapp\">\n        <Header complete={completeItemsCount} active={activeItemsCount} />\n        <main>\n          <TodoSearch onSearchChange={this.handleSearchChange} />\n          <TodoFilters\n            onFilterChange={this.handleFilterChange}\n            filter={filter}/>\n          <TodoAdd onItemAdd={this.handleItemAdd} />\n          <TodoList\n            items={visibleItems}\n            \n            onItemDelete={this.handleItemDelete}\n            onToggleComplete={this.handleToggleComplete}/>\n          \n        </main>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}